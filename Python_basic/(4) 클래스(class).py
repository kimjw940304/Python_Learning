'''
클래스(class)

1.what?
 특정한 종류의 값과, 그 값을 사용하는 함수들을 미리 만들어 놓은 집합
2. Why?
클래슨를 비유하자면 '붕어빵 틀'과 같다, 동일한 작업을 진행하지만 내부 재료만 달라질 수 있는 경우 사용

3. How?
(1) Class 클래스명:  # 클래스 정의
(2)     def__init__(self,인자2,인자3...)  # 클래스 메소드(함수) 선언
(3)     self.인자2 = ?                   #  클래스 멤버(변수) 선언
        self.인자3 = ?
        self.인자4 = ? 
        실행코드~~


cf) __init__ : '생성자'로 클래스의 '객체' 즉 '인스턴스' 가 '생성' 될때 자동으로 실행되는 '함수'


# 클래스 상속 : 자식 클래스는 부모클래스의 모든 클래스 멤버&메소드를 사용할 수 있다. 

class 부모클래스:
        ~~
class 자식클래스(부모클래스):
        ~~
class 자식클래스(부모클래스1, 부모클래스2,...)  # 다중 상속 
        def__init__(self):
                super().__init__()   # super)() 를 쓰게되면 다중 상속에서 맨 처음 상속받은 부모클래스1의 init함수만 호출된다. 


# 메소드 오버라이딩 : 자식클래스에서 부모클래스의 함수를 재정의해서 사용하는것??

# pass 

class 클래스명():
        def__init__(self,...)
                pass              #함수를 이렇게만 해두고 끝낸것으로 하는것. 

'''

 